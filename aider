#!/usr/bin/env bash
#
# Version 0.0.1

# Load API key from secure environment file
ENV_FILE="$HOME/.config/aider/env"
if [[ -f "$ENV_FILE" ]]; then
  source "$ENV_FILE"
elif [[ -z "$OPENROUTER_API_KEY" ]]; then
  echo "Error: OPENROUTER_API_KEY not found. Please create $ENV_FILE with:"
  echo "export OPENROUTER_API_KEY=your_key_here"
  echo "Then run: chmod 600 $ENV_FILE"
  exit 1
fi

# AIDER_MODEL="openai/gpt-4o"
# AIDER_MODEL="deepseek/deepseek-r1:free"
# AIDER_MODEL="anthropic/claude-opus-4"

if [[ $AIDER_MODEL = "" ]]; then
  AIDER_MODEL="anthropic/claude-sonnet-4"
fi

echo "Using model: $AIDER_MODEL"

SCRIPT_PATH=$(realpath "$0")
SCRIPT_DIR=$(dirname "$SCRIPT_PATH")

# Find aider in PATH directories, excluding the script's own directory
AIDER_BIN=""
IFS=':' read -ra PATH_DIRS <<< "$PATH"
for dir in "${PATH_DIRS[@]}"; do
  # Skip the script's own directory to avoid recursion
  if [[ "$dir" == "$SCRIPT_DIR" ]]; then
    continue
  fi
  # Check if an executable aider exists in this directory
  potential_aider="$dir/aider"
  if [[ -x "$potential_aider" && "$potential_aider" != "$SCRIPT_PATH" ]]; then
    AIDER_BIN="$potential_aider"
    break
  fi
done

if [[ -z "$AIDER_BIN" ]]; then
  echo "Error: Could not find the real aider executable"
  exit
fi

"$AIDER_BIN" \
  --model "openrouter/$AIDER_MODEL" \
  --cofig "$HOME/.config/aider.yml" \
  "$@"
