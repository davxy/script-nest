#!/usr/bin/env python
#
# Author: Davide Galassi <davxy@datawok.net>
# Version: 0.2.0
#
# Tool to delete old files from the folder of choice.

import datetime
import os
import sys
import time


def collect_files(directory, days):
    current_time = time.time()
    threshold_time = current_time - days * 24 * 60 * 60

    del_list = []
    try:
        for filename in os.listdir(directory):
            file_path = os.path.join(directory, filename)
            if os.path.isfile(file_path):
                file_time = os.path.getmtime(file_path)
                if file_time < threshold_time:
                    del_list.append((file_path, file_time))
            elif os.path.isdir(file_path):
                del_sub_list = collect_files(file_path, days)
                del_list.extend(del_sub_list)
    except OSError as e:
        print(f"Error: {e}")
    return del_list


if len(sys.argv) != 3:
    print("Usage: housekeep <directory> <days>")
    sys.exit(1)

directory = sys.argv[1]
days = int(sys.argv[2])

if not os.path.isdir(directory):
    print("Error: The specified directory does not exist.")
    sys.exit(1)

if days <= 0:
    print("Error: Days should be a positive integer.")
    sys.exit(1)

del_list = collect_files(directory, days)
if len(del_list) == 0:
    print("Nothing to do")
    sys.exit(0)

print("Removal list")
for entry in del_list:
    date = datetime.datetime.fromtimestamp(entry[1]).strftime("%Y-%m-%d")
    print("- ({}) {}".format(date, entry[0]))

user_input = input("Confirm [y/N]? ").lower()
if user_input == "y":
    print("Deleting files...")
    for entry in del_list:
        os.remove(entry[0])
else:
    print("Aborting")
