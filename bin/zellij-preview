#!/usr/bin/env bash
#
# Preview zellij sessions
#
# Author: Davide Galassi <davxy@datawok.net>
# Version: 0.1.0

# Create a temporary script for the preview function
preview_script=$(mktemp /tmp/zellij-preview-script.XXXXXX)
cat > "$preview_script" << 'EOF'
#!/usr/bin/env bash
session="$1"
tmpfile=$(mktemp /tmp/zellij-preview-dump.XXXXXX)

# Check if this is the current session
if [[ "$session" == *"(current)"* ]]; then
    echo "=== CURRENT SESSION ==="
    echo "This is the currently active session"
    rm "$tmpfile"
    exit 0
fi

# Extract just the session name (remove any status indicators)
session_name=$(echo "$session" | awk '{print $1}')

# Try to dump the session screen
if zellij -s "$session_name" action dump-screen "$tmpfile" 2>/dev/null; then
    if command -v bat >/dev/null 2>&1; then
        bat --plain --color always --language bash "$tmpfile"
    else
        cat "$tmpfile"
    fi
else
    echo "=== SESSION: $session_name ==="
    echo "Unable to preview session (may be detached or inactive)"
fi

rm "$tmpfile"
EOF

chmod +x "$preview_script"

# Get sessions and let user select with preview
session=$(zellij list-sessions 2>/dev/null | grep -v "EXITED" | fzf --ansi --preview-window 'up:50%' --preview "$preview_script {}")

# Clean up the temporary script
rm "$preview_script"

# Attach to selected session if one was chosen
if [[ -n "$session" ]]; then
    # Extract just the session name
    session_name=$(echo "$session" | awk '{print $1}')
    zellij attach "$session_name"
fi
